/*
    Archivo para el usuario de Auditoria.

    Grupo de trabajo:
    - 
    - 

    Tabla de contenido del Archivo: 
    - 
*/

-- 5.1 Crear tablas para almacenar datos para las auditorias de la tabla HOTELES
CREATE TABLE AUDIT_HOTELES AS SELECT * from OWNER.HOTELES WHERE 1=0;
ALTER TABLE AUDIT_HOTELES ADD ACCION_REALIZADA varchar2(20);
ALTER TABLE AUDIT_HOTELES ADD FECHA_ACCION Date;
ALTER TABLE AUDIT_HOTELES ADD NOMBRE_USUARIO varchar2(20);

CREATE OR REPLACE TRIGGER TGR_AUDIT_HOTELES
AFTER UPDATE OR DELETE ON OWNER.HOTELES
DECLARE
  ACCION varchar2(20);
BEGIN
    IF UPDATING THEN
        ACCION:='UPDATE'; 
    ELSIF DELETING THEN
        ACCION:='DELETE'; 
    END IF;
    --
    INSERT INTO AUDIT_HOTELES
    VALUES
    (:OLD.ID, :OLD.DIRECCION, :OLD.CIUDAD, :OLD.PISCINA, :OLD.JACUZZI, :OLD.SAUNA, :OLD.MASAJES, :OLD.TURCO, :OLD.JUEGOS, :OLD.PLAYA, :OLD.BAR, :OLD.DISCOTECA, ACCION, SYSDATE, USER);
END;
/

-- 5.2 Crear tablas para almacenar datos para las auditorias de la tabla CLIENTES
CREATE TABLE AUDIT_CLIENTES AS SELECT * from OWNER.CLIENTES WHERE 1=0;
ALTER TABLE AUDIT_CLIENTES ADD ACCION_REALIZADA varchar2(20);
ALTER TABLE AUDIT_CLIENTES ADD FECHA_ACCION Date;
ALTER TABLE AUDIT_CLIENTES ADD NOMBRE_USUARIO varchar2(20);

CREATE OR REPLACE TRIGGER TGR_AUDIT_CLIENTES
AFTER UPDATE OR DELETE ON OWNER.CLIENTES
FOR EACH ROW
DECLARE
  ACCION varchar2(20);
BEGIN
    IF UPDATING THEN
        ACCION:='UPDATE'; 
    ELSIF DELETING THEN
        ACCION:='DELETE'; 
    END IF;
    --
    INSERT INTO AUDIT_CLIENTES
    VALUES
    (:OLD.ID, :OLD.NOMBRES, :OLD.CEDULA, ACCION, SYSDATE, USER);
END;
/

-- 5.3 Crear tablas para almacenar datos para las auditorias de la tabla TEMPORADAS
CREATE TABLE AUDIT_TEMPORADAS AS SELECT * from OWNER.TEMPORADAS WHERE 1=0;
ALTER TABLE AUDIT_TEMPORADAS ADD ACCION_REALIZADA varchar2(20);
ALTER TABLE AUDIT_TEMPORADAS ADD FECHA_ACCION Date;
ALTER TABLE AUDIT_TEMPORADAS ADD NOMBRE_USUARIO varchar2(20);

CREATE OR REPLACE TRIGGER TGR_AUDIT_TEMPORADAS
AFTER UPDATE OR DELETE ON OWNER.TEMPORADAS
FOR EACH ROW
DECLARE
  ACCION varchar2(20);
BEGIN
    IF UPDATING THEN
        ACCION:='UPDATE'; 
    ELSIF DELETING THEN
        ACCION:='DELETE'; 
    END IF;
    --
    INSERT INTO AUDIT_TEMPORADAS
    VALUES
    (:OLD.ID, :OLD.HOTEL, :OLD.TEMPORADA, :OLD.FECHA_INICIO , :OLD.FECHA_FINAL , ACCION, SYSDATE, USER);
END;
/

-- 5.4 Crear tablas para almacenar datos para las auditorias de la tabla RESERVAS
CREATE TABLE AUDIT_RESERVAS AS SELECT * from OWNER.RESERVAS WHERE 1=0;
ALTER TABLE AUDIT_RESERVAS ADD ACCION_REALIZADA varchar2(20);
ALTER TABLE AUDIT_RESERVAS ADD FECHA_ACCION Date;
ALTER TABLE AUDIT_RESERVAS ADD NOMBRE_USUARIO varchar2(20);

CREATE OR REPLACE TRIGGER TGR_AUDIT_RESERVAS
AFTER UPDATE OR DELETE ON OWNER.RESERVAS
FOR EACH ROW
DECLARE
  ACCION varchar2(20);
BEGIN
    IF UPDATING THEN
        ACCION:='UPDATE'; 
    ELSIF DELETING THEN
        ACCION:='DELETE'; 
    END IF;
    --
    INSERT INTO AUDIT_TEMPORADAS
    VALUES
    (:OLD.ID, :OLD.CLIENTE ,:OLD.HOTEL, :OLD.FECHA, :OLD.VALOR, :OLD.TEMPORADAL, ACCION, SYSDATE, USER);
END;
/