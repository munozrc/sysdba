/*
    Archivo para el usuario de Auditoria.

    Nombre estudiantes:
    - 
    - 

    Tabla de contenido del Archivo: 
    - 
*/

-- 5.1 Crear tablas para almacenar datos para las auditorias de la tabla HOTELES
CREATE TABLE AUDIT_HOTELES AS SELECT * from OWNER.HOTELES WHERE 1=0;
ALTER TABLE AUDIT_HOTELES ADD ACCION_REALIZADA varchar2(20);
ALTER TABLE AUDIT_HOTELES ADD FECHA_ACCION Date;
ALTER TABLE AUDIT_HOTELES ADD NOMBRE_USUARIO varchar2(20);

CREATE OR REPLACE TRIGGER TGR_AUDIT_HOTELES
AFTER INSERT OR UPDATE OR DELETE ON OWNER.HOTELES
FOR EACH ROW
BEGIN
    IF UPDATING THEN
        INSERT INTO AUDIT_HOTELES VALUES
        (:OLD.ID,:OLD.DIRECCION,:OLD.CIUDAD,:OLD.PISCINA,:OLD.JACUZZI,:OLD.SAUNA,:OLD.MASAJES,:OLD.TURCO,:OLD.JUEGOS,:OLD.PLAYA,:OLD.BAR,:OLD.DISCOTECA, 'UPDATE', SYSDATE, USER);
    ELSIF DELETING THEN
        INSERT INTO AUDIT_HOTELES VALUES
        (:OLD.ID,:OLD.DIRECCION,:OLD.CIUDAD,:OLD.PISCINA,:OLD.JACUZZI,:OLD.SAUNA,:OLD.MASAJES,:OLD.TURCO,:OLD.JUEGOS,:OLD.PLAYA,:OLD.BAR,:OLD.DISCOTECA, 'DELETE', SYSDATE, USER);
    ELSE
        INSERT INTO AUDIT_HOTELES VALUES
        (:NEW.ID,:NEW.DIRECCION,:NEW.CIUDAD,:NEW.PISCINA,:NEW.JACUZZI,:NEW.SAUNA,:NEW.MASAJES,:NEW.TURCO,:NEW.JUEGOS,:NEW.PLAYA,:NEW.BAR,:OLD.DISCOTECA, 'INSERT', SYSDATE, USER);
    END IF;
    --
END;
/

-- 5.2 Crear tablas para almacenar datos para las auditorias de la tabla CLIENTES
CREATE TABLE AUDIT_CLIENTES AS SELECT * from OWNER.CLIENTES WHERE 1=0;
ALTER TABLE AUDIT_CLIENTES ADD ACCION_REALIZADA varchar2(20);
ALTER TABLE AUDIT_CLIENTES ADD FECHA_ACCION Date;
ALTER TABLE AUDIT_CLIENTES ADD NOMBRE_USUARIO varchar2(20);

CREATE OR REPLACE TRIGGER TGR_AUDIT_CLIENTES
AFTER INSERT OR UPDATE OR DELETE ON OWNER.CLIENTES
FOR EACH ROW
BEGIN
    IF UPDATING THEN
        INSERT INTO AUDIT_CLIENTES VALUES
        (:OLD.ID,:OLD.NOMBRES,:OLD.CEDULA,'UPDATE', SYSDATE, USER);
    ELSIF DELETING THEN
        INSERT INTO AUDIT_CLIENTES VALUES
        (:OLD.ID,:OLD.NOMBRES,:OLD.CEDULA,'DELETE', SYSDATE, USER);
    ELSE
        INSERT INTO AUDIT_CLIENTES VALUES
        (:OLD.ID,:OLD.NOMBRES,:OLD.CEDULA,'INSERT', SYSDATE, USER);
    END IF;
    --
END;
/

-- 5.3 Crear tablas para almacenar datos para las auditorias de la tabla TEMPORADAS
CREATE TABLE AUDIT_TEMPORADAS AS SELECT * from OWNER.TEMPORADAS WHERE 1=0;
ALTER TABLE AUDIT_TEMPORADAS ADD ACCION_REALIZADA varchar2(20);
ALTER TABLE AUDIT_TEMPORADAS ADD FECHA_ACCION Date;
ALTER TABLE AUDIT_TEMPORADAS ADD NOMBRE_USUARIO varchar2(20);

CREATE OR REPLACE TRIGGER TGR_AUDIT_TEMPORADAS
AFTER INSERT OR UPDATE OR DELETE ON OWNER.TEMPORADAS
FOR EACH ROW
BEGIN
    IF UPDATING THEN
        INSERT INTO AUDIT_TEMPORADAS VALUES
        (:OLD.ID,:OLD.HOTEL,:OLD.TEMPORADA, :OLD.FECHA_INICIO , :OLD.FECHA_FINAL ,'UPDATE', SYSDATE, USER);
    ELSIF DELETING THEN
        INSERT INTO AUDIT_TEMPORADAS VALUES
        (:OLD.ID,:OLD.HOTEL,:OLD.TEMPORADA, :OLD.FECHA_INICIO , :OLD.FECHA_FINAL,'DELETE', SYSDATE, USER);
    ELSE
        INSERT INTO AUDIT_TEMPORADAS VALUES
        (:OLD.ID,:OLD.HOTEL,:OLD.TEMPORADA, :OLD.FECHA_INICIO , :OLD.FECHA_FINAL,'INSERT', SYSDATE, USER);
    END IF;
    --
END;
/

-- 5.4 Crear tablas para almacenar datos para las auditorias de la tabla RESERVAS
CREATE TABLE AUDIT_RESERVAS AS SELECT * from OWNER.RESERVAS WHERE 1=0;
ALTER TABLE AUDIT_RESERVAS ADD ACCION_REALIZADA varchar2(20);
ALTER TABLE AUDIT_RESERVAS ADD FECHA_ACCION Date;
ALTER TABLE AUDIT_RESERVAS ADD NOMBRE_USUARIO varchar2(20);

CREATE OR REPLACE TRIGGER TGR_AUDIT_RESERVAS
AFTER INSERT OR UPDATE OR DELETE ON OWNER.RESERVAS
FOR EACH ROW
BEGIN
    IF UPDATING THEN
        INSERT INTO AUDIT_RESERVAS VALUES
        (:OLD.ID,:OLD.CLIENTE ,:OLD.HOTEL,:OLD.FECHA, :OLD.VALOR, :OLD.TEMPORADAL,'UPDATE', SYSDATE, USER);
    ELSIF DELETING THEN
        INSERT INTO AUDIT_RESERVAS VALUES
        (:OLD.ID,:OLD.CLIENTE ,:OLD.HOTEL,:OLD.FECHA, :OLD.VALOR, :OLD.TEMPORADAL,'DELETE', SYSDATE, USER);
    ELSE
        INSERT INTO AUDIT_RESERVAS VALUES
        (:OLD.ID,:OLD.CLIENTE ,:OLD.HOTEL,:OLD.FECHA, :OLD.VALOR, :OLD.TEMPORADAL,'INSERT', SYSDATE, USER);
    END IF;
    --
END;
/